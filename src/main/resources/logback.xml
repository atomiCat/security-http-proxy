<configuration>
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{35} - %msg %n</pattern>
        </encoder>
    </appender>
    <!--<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
        <!--&lt;!&ndash;定义日志输出的路径&ndash;&gt;-->
        <!--&lt;!&ndash;这里的scheduler.manager.server.home 没有在上面的配置中设定，所以会使用java启动时配置的值&ndash;&gt;-->
        <!--&lt;!&ndash;比如通过 java -Dscheduler.manager.server.home=/path/to XXXX 配置该属性&ndash;&gt;-->
        <!--<file>./proxy.log</file>-->
        <!--&lt;!&ndash;定义日志滚动的策略&ndash;&gt;-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
            <!--&lt;!&ndash;定义文件滚动时的文件名的格式&ndash;&gt;-->
            <!--<fileNamePattern>./proxy-%d{yyyy-MM-dd.HH}.log</fileNamePattern>-->
        <!--</rollingPolicy>-->
        <!--<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
            <!--&lt;!&ndash;每个日志文件最大20MB&ndash;&gt;-->
            <!--<maxFileSize>20MB</maxFileSize>-->
        <!--</triggeringPolicy>-->
        <!--&lt;!&ndash;定义输出格式&ndash;&gt;-->
        <!--<encoder>-->
            <!--<pattern>%d{MM-dd HH:mm:ss.SSS}-[%thread] %-5level %logger{35} - %msg %n</pattern>-->
        <!--</encoder>-->
    <!--</appender>-->

    <!--<root level="INFO">-->
        <!--<appender-ref ref="FILE"/>-->
    <!--</root>-->
    <root level="INFO">
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>